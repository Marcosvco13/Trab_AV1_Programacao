// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Consultorio_Dentista.Model.Models;

public partial class CONSULTORIO_DENTISTAContext : DbContext
{
    public CONSULTORIO_DENTISTAContext(DbContextOptions<CONSULTORIO_DENTISTAContext> options)
        : base(options)
    {
    }

    public CONSULTORIO_DENTISTAContext()
    {

    }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)

=> optionsBuilder.UseSqlServer("data source=GUSTAVO\\SQLEXPRESS;Initial Catalog=CONSULTORIO_DENTISTA;;Integrated Security=True; TrustServerCertificate=True");

    public virtual DbSet<Cliente> Cliente { get; set; }

    public virtual DbSet<Consultas> Consultas { get; set; }

    public virtual DbSet<Estoque> Estoque { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CLIENTE__3214EC279DDE3E7F");

            entity.ToTable("CLIENTE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Bairro)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BAIRRO");
            entity.Property(e => e.Cep)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CEP");
            entity.Property(e => e.Cidade)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CIDADE");
            entity.Property(e => e.Cpf)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("CPF");
            entity.Property(e => e.DataNascimento)
                .HasColumnType("datetime")
                .HasColumnName("DATA_NASCIMENTO");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("EMAIL");
            entity.Property(e => e.Estado)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ESTADO");
            entity.Property(e => e.Logradouro)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOGRADOURO");
            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NOME");
            entity.Property(e => e.NomeResp)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NOME_RESP");
            entity.Property(e => e.Numero)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("NUMERO");
            entity.Property(e => e.Telefone)
                .IsRequired()
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("TELEFONE");
        });

        modelBuilder.Entity<Consultas>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CONSULTA__3214EC272017DC01");

            entity.ToTable("CONSULTAS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DataConsulta)
                .HasColumnType("datetime")
                .HasColumnName("DATA_CONSULTA");
            entity.Property(e => e.Descricao)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("DESCRICAO");
            entity.Property(e => e.HoraConsulta)
                .HasColumnType("datetime")
                .HasColumnName("HORA_CONSULTA");
            entity.Property(e => e.IdCliente).HasColumnName("ID_CLIENTE");

            entity.HasOne(d => d.IdClienteNavigation).WithMany(p => p.Consultas)
                .HasForeignKey(d => d.IdCliente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ID_CLIENTE");
        });

        modelBuilder.Entity<Estoque>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ESTOQUE__3214EC27B365E590");

            entity.ToTable("ESTOQUE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DataValidade).HasColumnType("date");
            entity.Property(e => e.Fornecedor)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FORNECEDOR");
            entity.Property(e => e.NomeProduto)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NOME_PRODUTO");
            entity.Property(e => e.Perecivel).HasColumnName("PERECIVEL");
            entity.Property(e => e.PrecoUnitario)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PRECO_UNITARIO");
            entity.Property(e => e.Quantidade).HasColumnName("QUANTIDADE");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}